git:
  submodules: false

# permissions
sudo: false

# Enable C++ support
language: cpp

# Compiler selection
dist: focal

matrix:
  include:
    - env:
        - TYPE=Release
        - STATIC=1
        - ADDRESS=0
        - THREAD=0
        - UB=0
        - CC=clang-12
        - CXX=clang++-12
      os: linux
      compiler: clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-focal-12
          - sourceline: 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: ['cmake', 'ninja-build', 'clang-12', 'clang++-12', 'lld-12', 'libc++-12-dev', 'libc++abi-12-dev']

    - env:
        - TYPE=Release
        - STATIC=0
        - ADDRESS=1
        - THREAD=0
        - UB=1
        - CC=clang-12
        - CXX=clang++-12
      os: linux
      compiler: clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-focal-12
          - sourceline: 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: ['cmake', 'ninja-build', 'clang-12', 'clang++-12', 'lld-12', 'libc++-12-dev', 'libc++abi-12-dev']

    - env:
        - TYPE=Release
        - STATIC=0
        - ADDRESS=0
        - THREAD=1
        - UB=0
        - CC=clang-12
        - CXX=clang++-12
      os: linux
      compiler: clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-focal-12
          - sourceline: 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main'
            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages: ['cmake', 'ninja-build', 'clang-12', 'clang++-12', 'lld-12', 'libc++-12-dev', 'libc++abi-12-dev']

    - env:
        - TYPE=Release
        - STATIC=1
        - ADDRESS=0
        - THREAD=0
        - UB=0
        - CC=gcc-10
        - CXX=g++-10
      os: linux
      compiler: gcc
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages: ['cmake', 'ninja-build', 'gcc-10', 'g++-10']

    - env:
        - TYPE=Release
        - STATIC=0
        - ADDRESS=1
        - THREAD=0
        - UB=1
        - CC=gcc-10
        - CXX=g++-10
      os: linux
      compiler: gcc
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages: ['cmake', 'ninja-build', 'gcc-10', 'g++-10']

    - env:
        - TYPE=Release
        - STATIC=0
        - ADDRESS=0
        - THREAD=1
        - UB=0
        - CC=gcc-10
        - CXX=g++-10
      os: linux
      compiler: gcc
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages: ['cmake', 'ninja-build', 'gcc-10', 'g++-10']

    - env:
        - TYPE=Release
        - STATIC=0
        - ADDRESS=1
        - THREAD=0
        - UB=1
        - CC=clang
        - CXX=clang++
      os: osx
      osx_image: xcode12.2

    - env:
        - TYPE=Release
        - STATIC=0
        - ADDRESS=0
        - THREAD=1
        - UB=0
        - CC=clang
        - CXX=clang++
      os: osx
      osx_image: xcode12.2

script:
  - $CC --version
  - $CXX --version
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=${TYPE} -DIHFT_STATIC_LINK=${STATIC} -DIHFT_ADDRESS_SANITIZER=${ADDRESS} -DIHFT_THREAD_SANITIZER=${THREAD} -DIHFT_UB_SANITIZER=${UB} ..
  - cmake --build .
  - ctest -R
